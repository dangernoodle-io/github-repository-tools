<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.dangernoodle</groupId>
    <artifactId>github-repository-tools</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>github-repository-tools-docker</artifactId>
  <name>${project.artifactId}</name>

  <properties>
    <docker.build.tag>development</docker.build.tag>
    <shaded.artifact.name>${project.name}-${project.version}-shaded.jar</shaded.artifact.name>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>default-install</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testResources</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>test-jar</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <generateUniqueDependencyReducedPom>false</generateUniqueDependencyReducedPom>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>io.dangernoodle.grt.main.GithubRepositoryTools</mainClass>
            </transformer>
          </transformers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>dangernoodle/${project.parent.artifactId}:${project.version}</name>
              <alias>${project.name}</alias>
              <build>
                <from>openjdk:8-jdk-alpine</from>
                <labels>
                  <version>${project.version}</version>
                </labels>
                <assembly>
                  <inline>
                    <fileSets>
                      <fileSet>
                        <directory>${project.build.directory}</directory>
                        <outputDirectory>/</outputDirectory>
                        <includes>
                          <include>**/${shaded.artifact.name}</include>
                        </includes>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>java</arg>
                    <arg>-jar</arg>
                    <arg>/maven/${shaded.artifact.name}</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>io.dangernoodle</groupId>
      <artifactId>github-repository-tools-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>env.IS_M2RELEASEBUILD</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <docker.build.tag>latest</docker.build.tag>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <configuration>
                <images>
                  <image>
                    <build>
                      <tags>
                        <tag>latest</tag>
                      </tags>
                    </build>
                  </image>
                </images>
              </configuration>
              <executions>
                <execution>
                  <id>deploy</id>
                  <phase>deploy</phase>
                  <goals>
                    <goal>push</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project>
